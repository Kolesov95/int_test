import org.apache.spark.sql.SparkSession

package tusk {

  import org.apache.spark.sql.{Dataset, Encoders, SparkSession, functions}
  import org.apache.spark.SparkContext
  import org.apache.spark.SparkContext._
  import org.apache.spark.sql.hive.test.TestHive.sparkContext
  import org.apache.spark.SparkConf
  import org.apache.spark.sql.catalyst.dsl.expressions.{DslExpression, StringToAttributeConversionHelper}
  import org.apache.spark.sql.functions.{avg, coalesce, col, concat, date_format, explode, from_unixtime, isnull, lit, split, sum, to_date, to_timestamp, unix_timestamp, when}
  import org.apache.spark.sql.sources.IsNull

  import java.util
  import scala.collection.JavaConversions.asScalaBuffer


  object tuskApp {
    def main(args: Array[String]): Unit = {
      val spark = SparkSession.builder
        .appName("tuskApp")
        .master("local[*]")
        .getOrCreate


        // Чтобы запросы выполнялись быстрее сократил объем данных. Взял один файл из ноября и один из декабря.
        // Беру данных из ноябрьского файла
      var df = spark.read.format("csv")
        .option("header", "true")
        .option("delimiter", "\t")
        .load("Data/test/November/sms-call-internet-mi-2013-11-07.txt")
        .withColumnRenamed("1", "Square id")
        .withColumnRenamed("1383778800000", "Time interval")
        .withColumnRenamed("0", "Country code")
        .withColumnRenamed("0.026137424264286602", "SMS-in activity")
        .withColumnRenamed("_c4", "SMS-out activity")
        .withColumnRenamed("_c5", "Call-in activity")
        .withColumnRenamed("_c6", "Call-out activity")
        .withColumnRenamed("_c7", "Internet traffic activity")

      //Перевожу время в привычный для человека вид
      df = df.withColumn("Time interval", from_unixtime(col("Time interval") / 1000))


      // Беру данных из декабрьского файла
      var df2 = spark.read.format("csv")
        .option("header", "true")
        .option("delimiter", "\t")
        .load("Data/test/december/sms-call-internet-mi-2013-12-05.txt")
        .withColumnRenamed("1", "Square id")
        .withColumnRenamed("1386198000000", "Time interval")
        .withColumnRenamed("0", "Country code")
        .withColumnRenamed("0.10454969705714641", "SMS-in activity")
        .withColumnRenamed("_c4", "SMS-out activity")
        .withColumnRenamed("_c5", "Call-in activity")
        .withColumnRenamed("_c6", "Call-out activity")
        .withColumnRenamed("_c7", "Internet traffic activity")

      df2 = df2.withColumn("Time interval", from_unixtime(col("Time interval") / 1000))

      var df3 = df.unionByName(df2) //Объединяю с помощью union декабрь и ноябрь
//      +---------+-------------------+------------+--------------------+--------------------+--------------------+--------------------+-------------------------+
//      |Square id|      Time interval|Country code|     SMS-in activity|    SMS-out activity|    Call-in activity|   Call-out activity|Internet traffic activity|
//      +---------+-------------------+------------+--------------------+--------------------+--------------------+--------------------+-------------------------+
//      |        1|2013-11-07 03:00:00|          39| 0.11098916961424417| 0.37934165593450764| 0.11098916961424417|0.026137424264286602|          8.7099819516014|
//        |        1|2013-11-07 03:10:00|           0| 0.08190139463155853|                null|                null|                null|                     null|
//        |        1|2013-11-07 03:10:00|          39| 0.24749149400017503| 0.24811576349277495|                null|                null|        9.273106624509612|
//        |        1|2013-11-07 03:20:00|           0| 0.08190139463155853|                null|                null|                null|                     null|
//        |        1|2013-11-07 03:20:00|          39|  0.3217903754617363|  0.3247407261801353|0.026137424264286602| 0.05460092975437236|       11.252708342682007|
//        |        1|2013-11-07 03:30:00|           0|0.001787310105499...|                null|                null|                null|                     null|
//        |        1|2013-11-07 03:30:00|          39|  0.4013656888674957| 0.32536499567273514| 0.08136262351125882|0.029087774982685617|        9.658285660447724|
//        |        1|2013-11-07 03:40:00|           0| 0.05460092975437236|                null|                null|                null|                     null|
//        |        1|2013-11-07 03:40:00|          39| 0.13533928377303134|   0.192351793125503| 0.07957531340575938| 0.05460092975437236|        8.767165457698471|
//        |        1|2013-11-07 03:50:00|          39|  0.2457041838946756| 0.19110325414030327|0.001787310105499...|                null|         8.19788358823656|
//        |        1|2013-11-07 04:00:00|           0| 0.02730046487718618|                null|                null|                null|                     null|
//        |        1|2013-11-07 04:00:00|          39| 0.27479195887736124|   0.198252494562301|0.001787310105499...|                null|        7.712081886220411|
//        |        1|2013-11-07 04:10:00|           0| 0.02730046487718618|                null|                null|                null|                     null|
//        |        1|2013-11-07 04:10:00|          39| 0.13712659387853077| 0.19351483373840256|                null|0.001787310105499...|        7.892669817019013|
//        |        1|2013-11-07 04:20:00|          39| 0.10571273767004599|  0.0825256641241584|0.001787310105499...|                null|        7.460317763804534|
//        |        1|2013-11-07 04:30:00|          39| 0.02792473436978604| 0.13596355326563117|0.003574620210998875|                null|        6.817104787256761|
//        |        1|2013-11-07 04:40:00|          39|  0.0854760148425574|0.058175549965371234|                null|                null|       6.7036560802188125|
//        |        1|2013-11-07 04:50:00|           0| 0.02730046487718618|                null|                null|                null|                     null|
//        |        1|2013-11-07 04:50:00|          39| 0.08073835401865896| 0.08368870473705797|                null|                null|        6.467059443596234|
//        |        1|2013-11-07 05:00:00|          39| 0.05460092975437236|0.030875085088185057|                null|                null|        6.089787373770625|
//        +---------+-------------------+------------+--------------------+--------------------+--------------------+--------------------+-------------------------+

      // Далее для корректного сложения активностей заменяю null на 0
      df3 = df3.withColumn("SMS-in activity", coalesce(col("SMS-in activity"), lit(0)))
        .withColumn("SMS-out activity", coalesce(col("SMS-out activity"), lit(0)))
        .withColumn("Call-in activity", coalesce(col("Call-in activity"), lit(0)))
        .withColumn("Call-out activity", coalesce(col("Call-out activity"), lit(0)))
        .withColumn("Internet traffic activity", coalesce(col("Internet traffic activity"), lit(0)))
      // Складываю активности
      df3 = df3.withColumn("sum_active", col("SMS-in activity") + col("SMS-out activity") + col("Call-in activity") + col("Call-out activity") + col("Call-out activity") + col("Internet traffic activity"))
      df3 = df3.drop("SMS-in activity", "SMS-out activity", "Call-in activity", "Call-out activity", "Internet traffic activity") // Удаляю лишние столбцы, оставляю только суммы активностей
//      +---------+-------------------+------------+--------------------+
//      |Square id|      Time interval|Country code|          sum_active|
//        +---------+-------------------+------------+--------------------+
//      |        1|2013-11-07 03:00:00|          39|   9.363576795292968|
//        |        1|2013-11-07 03:10:00|           0| 0.08190139463155853|
//        |        1|2013-11-07 03:10:00|          39|   9.768713882002562|
//        |        1|2013-11-07 03:20:00|           0| 0.08190139463155853|
//        |        1|2013-11-07 03:20:00|          39|   12.03457872809691|
//        |        1|2013-11-07 03:30:00|           0|0.001787310105499...|
//      |        1|2013-11-07 03:30:00|          39|  10.524554518464585|
//        |        1|2013-11-07 03:40:00|           0| 0.05460092975437236|
//        |        1|2013-11-07 03:40:00|          39|   9.283633707511509|
//        |        1|2013-11-07 03:50:00|          39|   8.636478336377039|
//        |        1|2013-11-07 04:00:00|           0| 0.02730046487718618|
//        |        1|2013-11-07 04:00:00|          39|   8.186913649765573|
//        |        1|2013-11-07 04:10:00|           0| 0.02730046487718618|
//        |        1|2013-11-07 04:10:00|          39|   8.226885864846945|
//        |        1|2013-11-07 04:20:00|          39|   7.650343475704238|
//        |        1|2013-11-07 04:30:00|          39|   6.984567695103177|
//        |        1|2013-11-07 04:40:00|          39|   6.847307645026741|
//        |        1|2013-11-07 04:50:00|           0| 0.02730046487718618|
//        |        1|2013-11-07 04:50:00|          39|   6.631486502351951|
//        |        1|2013-11-07 05:00:00|          39|   6.175263388613183|
//        +---------+-------------------+------------+--------------------+
      val df4 = df3.groupBy("Square id").agg(sum(col("sum_active")) as "sum_active") // Вычисляю суммарную активность по каждой зоне
//      +---------+------------------+
//      |Square id|        sum_active|
//        +---------+------------------+
//        |     1090|1191.7087372805784|
//        |     1159|14261.635310292957|
//        |     1436| 4850.796440395634|
//        |     1512|1885.6306387876475|
//        |     1572| 6020.394558112621|
//        |     2069| 5688.162919498429|
//        |     2088| 19389.60731321619|
//        |     2136|10047.552079322122|
//        |     2162| 4715.014756324035|
//        |     2294| 9557.967900525351|
//        |     2904| 3860.611628647876|
//        |      296|  6715.85386541711|
//        |     3210| 4120.222819943947|
//        |     3414| 7933.720251454102|
//        |     3606|1903.6098036569497|
//        |     3959| 92179.64768043833|
//        |     4032|32133.315830672043|
//        |      467| 8457.024458945252|
//        |     4821|18034.172906142325|
//        |     4937| 22732.85425503476|
//        +---------+------------------+
      val avgValList = df4.select(avg(col("sum_active"))).collectAsList() // Нахожу среднюю активность, загоняю ее в массив, чтобы потом положить ее в переменную
      val avgVal = avgValList.get(0).get(0) // Кладу среднюю активность в переменную
      // Далее хочу разделить столбец date на 2 столбца. В одном столбце дата, в другом интервал времени(time)
      df3 = df3.withColumn("date", unix_timestamp(col("Time interval"), "'MM/dd/yyy'"))
      df3 = df3.withColumn("date", split(col("Time interval"), " ").getItem(0))
        .withColumn("time", split(col("Time interval"), " ").getItem(1))

      df3 = df3.withColumn("date", to_date(col("date"), "yyyy-MM-dd"))
        .withColumn("time", date_format(col("time"), "HH:mm:ss"))

//      +---------+-------------------+------------+--------------------+----------+--------+
//      |Square id|      Time interval|Country code|          sum_active|      date|    time|
//        +---------+-------------------+------------+--------------------+----------+--------+
//        |        1|2013-11-07 03:00:00|          39|   9.363576795292968|2013-11-07|03:00:00|
//        |        1|2013-11-07 03:10:00|           0| 0.08190139463155853|2013-11-07|03:10:00|
//        |        1|2013-11-07 03:10:00|          39|   9.768713882002562|2013-11-07|03:10:00|
//        |        1|2013-11-07 03:20:00|           0| 0.08190139463155853|2013-11-07|03:20:00|
//        |        1|2013-11-07 03:20:00|          39|   12.03457872809691|2013-11-07|03:20:00|
//        |        1|2013-11-07 03:30:00|           0|0.001787310105499...|2013-11-07|03:30:00|
//        |        1|2013-11-07 03:30:00|          39|  10.524554518464585|2013-11-07|03:30:00|
//        |        1|2013-11-07 03:40:00|           0| 0.05460092975437236|2013-11-07|03:40:00|
//        |        1|2013-11-07 03:40:00|          39|   9.283633707511509|2013-11-07|03:40:00|
//        |        1|2013-11-07 03:50:00|          39|   8.636478336377039|2013-11-07|03:50:00|
//        |        1|2013-11-07 04:00:00|           0| 0.02730046487718618|2013-11-07|04:00:00|
//        |        1|2013-11-07 04:00:00|          39|   8.186913649765573|2013-11-07|04:00:00|
//        |        1|2013-11-07 04:10:00|           0| 0.02730046487718618|2013-11-07|04:10:00|
//        |        1|2013-11-07 04:10:00|          39|   8.226885864846945|2013-11-07|04:10:00|
//        |        1|2013-11-07 04:20:00|          39|   7.650343475704238|2013-11-07|04:20:00|
//        |        1|2013-11-07 04:30:00|          39|   6.984567695103177|2013-11-07|04:30:00|
//        |        1|2013-11-07 04:40:00|          39|   6.847307645026741|2013-11-07|04:40:00|
//        |        1|2013-11-07 04:50:00|           0| 0.02730046487718618|2013-11-07|04:50:00|
//        |        1|2013-11-07 04:50:00|          39|   6.631486502351951|2013-11-07|04:50:00|
//        |        1|2013-11-07 05:00:00|          39|   6.175263388613183|2013-11-07|05:00:00|
//        +---------+-------------------+------------+--------------------+----------+--------+

      //Далее создаю фрейм, в который входят только рабочие промежутки (без обеда)
      val dfw1 = df3.where(col("time").between("09:00:00", "12:50:00"))
      val dfw2 = df3.where(col("time").between("15:00:00", "16:50:00"))
      val dfw = dfw1.union(dfw2)
//      +---------+-------------------+------------+--------------------+----------+--------+
//      |Square id|      Time interval|Country code|          sum_active|      date|    time|
//        +---------+-------------------+------------+--------------------+----------+--------+
//      |        1|2013-11-07 09:00:00|           0| 0.05343788914147278|2013-11-07|09:00:00|
//        |        1|2013-11-07 09:00:00|          39|   5.404790433530768|2013-11-07|09:00:00|
//        |        1|2013-11-07 09:00:00|          46|0.026137424264286602|2013-11-07|09:00:00|
//        |        1|2013-11-07 09:00:00|         880|0.052274848528573205|2013-11-07|09:00:00|
//        |        1|2013-11-07 09:10:00|           0| 0.05460092975437236|2013-11-07|09:10:00|
//        |        1|2013-11-07 09:10:00|          39|   6.228884034159452|2013-11-07|09:10:00|
//        |        1|2013-11-07 09:20:00|          39|   5.561919432058993|2013-11-07|09:20:00|
//        |        1|2013-11-07 09:30:00|           0|0.026137424264286602|2013-11-07|09:30:00|
//        |        1|2013-11-07 09:30:00|          39|   7.088713419619214|2013-11-07|09:30:00|
//        |        1|2013-11-07 09:40:00|           0|0.026137424264286602|2013-11-07|09:40:00|
//        |        1|2013-11-07 09:40:00|          39|   7.761429903350978|2013-11-07|09:40:00|
//        |        1|2013-11-07 09:40:00|          46|0.026137424264286602|2013-11-07|09:40:00|
//        |        1|2013-11-07 09:50:00|           0|0.001787310105499...|2013-11-07|09:50:00|
//        |        1|2013-11-07 09:50:00|          39|   7.514978411044707|2013-11-07|09:50:00|
//        |        1|2013-11-07 10:00:00|           0| 0.02792473436978604|2013-11-07|10:00:00|
//        |        1|2013-11-07 10:00:00|           1|0.001787310105499...|2013-11-07|10:00:00|
//        |        1|2013-11-07 10:00:00|          39|   8.988798199490367|2013-11-07|10:00:00|
//        |        1|2013-11-07 10:00:00|         420|0.026137424264286602|2013-11-07|10:00:00|
//        |        1|2013-11-07 10:10:00|           0| 0.11456378982524304|2013-11-07|10:10:00|
//        |        1|2013-11-07 10:10:00|          39|   13.98392602672633|2013-11-07|10:10:00|
//        +---------+-------------------+------------+--------------------+----------+--------+

      // Находим суммарную активность в рабочее время и сравниваем ее со средней. Если активность больше средней, то зона рабочая
      val dfw3 = dfw.groupBy("Square id").agg(sum("sum_active") as "sum_activity")
      val dfw4 = dfw3.where(col("sum_activity").>=(avgVal))
      val dfw5 = dfw4.withColumn("work", lit("work"))
//      +---------+------------------+----+
//      |Square id|      sum_activity|work|
//        +---------+------------------+----+
//      |     5645|29855.203100093586|work|
//        |     5067|30277.991519575655|work|
//        |     5149| 34187.66348695282|work|
//        |     6248|32952.920363649275|work|
//        |     6558| 29892.86535497611|work|
//        |     4850| 37837.93989003997|work|
//        |     5757| 54921.68510717079|work|
//        |     5057| 52476.48157095927|work|
//        |     6252|29887.067578260536|work|
//        |     6850| 37434.64293490769|work|
//        |     5048|40956.094961610244|work|
//        |     5052| 38602.06624611456|work|
//        |     5450| 35905.48206634195|work|
//        |     6758| 29687.75430168824|work|
//        |     5071|32075.634687773265|work|
//        |     6264| 69725.07228598904|work|
//        |     3953| 31088.26415770784|work|
//        |     4856|106649.39311306561|work|
//        |     5170|  44554.1579981051|work|
//        |     5855|50765.445443256016|work|
//        +---------+------------------+----+

      // Зоны, которые не вошли в таблтцу с рабочими, отмечаем как жилые (live)
      val result = dfw3.join(dfw5, Seq("Square id"),  "left")

      val result2 = result.drop("sum_activity")
      val result3 = result2.withColumn("work", coalesce(col("work"), lit("live")))
      result3.show(1000)
      result3.show()
//      +---------+----+
//      |Square id|work|
//        +---------+----+
//      |     1090|live|
//        |     1159|live|
//        |     1436|live|
//        |     1512|live|
//        |     1572|live|
//        |     2069|live|
//        |     2088|live|
//        |     2136|live|
//        |     2162|live|
//        |     2294|live|
//        |     2904|live|
//        |      296|live|
//        |     3210|live|
//        |     3414|live|
//        |     3606|live|
//        |     3959|live|
//        |     4032|live|
//        |      467|live|
//        |     4821|live|
//        |     4937|live|
//        |     5325|live|
//        |     5645|work|
//        |     5925|live|
//        |     6194|live|
//        |     6240|live|
//        |     6613|live|
//        |     6731|live|
//        |      675|live|
//        |      691|live|
//        |     7252|live|
    }
  }
}
